swagger: "2.0"
info:
  title: Relex API
  description: RESTful API for Relex Backend
  version: 1.0.0
host: api.relex.ro
basePath: /v1
schemes:
  - https
security:
  - firebase: []

securityDefinitions:
  firebase:
    type: http
    scheme: bearer
    bearerFormat: JWT
    x-google-issuer: "https://securetoken.google.com/relexro"
    x-google-jwks_uri: "https://www.googleapis.com/service_accounts/v1/metadata/x509/securetoken@system.gserviceaccount.com"
    x-google-audiences: "relexro"

paths:
  # User profile endpoints
  /users/me:
    get:
      summary: Get user profile
      operationId: getUserProfile
      security:
        - firebase: []
      x-google-backend:
        address: https://europe-west3-relexro.cloudfunctions.net/relex-backend-get-user-profile
        path_translation: CONSTANT_ADDRESS
        deadline: 30.0
      responses:
        '200':
          description: User profile
          schema:
            $ref: '#/definitions/UserProfile'
        '401':
          $ref: '#/definitions/Unauthorized'
        '404':
          $ref: '#/definitions/NotFound'
        '500':
          $ref: '#/definitions/InternalServerError'
    put:
      summary: Update user profile
      operationId: updateUserProfile
      security:
        - firebase: []
      x-google-backend:
        address: https://europe-west3-relexro.cloudfunctions.net/relex-backend-update-user-profile
        path_translation: CONSTANT_ADDRESS
        deadline: 30.0
      parameters:
        - in: body
          name: body
          required: true
          schema:
            type: object
            properties:
              displayName:
                type: string
              photoURL:
                type: string
              languagePreference:
                type: string
                enum: [en, ro]
      responses:
        '200':
          description: User profile updated
          schema:
            $ref: '#/definitions/UserProfile'
        '400':
          $ref: '#/definitions/BadRequest'
        '401':
          $ref: '#/definitions/Unauthorized'
        '404':
          $ref: '#/definitions/NotFound'
        '500':
          $ref: '#/definitions/InternalServerError'

  /users/me/organizations:
    get:
      summary: List user's organizations
      operationId: listMyOrganizations
      security:
        - firebase: []
      x-google-backend:
        address: https://europe-west3-relexro.cloudfunctions.net/relex-backend-list-user-organizations
        path_translation: CONSTANT_ADDRESS
        deadline: 30.0
      responses:
        '200':
          description: List of organizations
          schema:
            type: object
            properties:
              organizations:
                type: array
                items:
                  $ref: '#/definitions/OrganizationSummary'
        '401':
          $ref: '#/definitions/Unauthorized'
        '500':
          $ref: '#/definitions/InternalServerError'

  /users/me/cases:
    get:
      summary: List user's individual cases
      operationId: listMyCases
      security:
        - firebase: []
      x-google-backend:
        address: https://europe-west3-relexro.cloudfunctions.net/relex-backend-list-cases
        path_translation: CONSTANT_ADDRESS
        deadline: 30.0
      parameters:
        - name: status
          in: query
          required: false
          type: string
          enum: [open, archived, deleted]
        - name: limit
          in: query
          required: false
          type: integer
        - name: offset
          in: query
          required: false
          type: integer
        - name: labelIds
          in: query
          required: false
          type: array
          items:
            type: string
      responses:
        '200':
          description: List of cases
          schema:
            type: object
            properties:
              cases:
                type: array
                items:
                  $ref: '#/definitions/Case'
              total:
                type: integer
              limit:
                type: integer
              offset:
                type: integer
        '401':
          $ref: '#/definitions/Unauthorized'
        '500':
          $ref: '#/definitions/InternalServerError'

  # Organization endpoints
  /organizations:
    post:
      summary: Create a new organization
      operationId: createOrganization
      security:
        - firebase: []
      x-google-backend:
        address: https://europe-west3-relexro.cloudfunctions.net/relex-backend-create-organization
        path_translation: CONSTANT_ADDRESS
        deadline: 30.0
      parameters:
        - in: body
          name: body
          required: true
          schema:
            type: object
            required:
              - name
              - type
            properties:
              name:
                type: string
                description: Name of the organization
              type:
                type: string
                description: Type of organization (e.g., law_firm)
              address:
                type: string
                description: Address of the organization
              phone:
                type: string
                description: Phone number of the organization
              email:
                type: string
                description: Email of the organization
      responses:
        '201':
          description: Organization created successfully
          schema:
            $ref: '#/definitions/Organization'
        '400':
          $ref: '#/definitions/BadRequest'
        '401':
          $ref: '#/definitions/Unauthorized'
        '500':
          $ref: '#/definitions/InternalServerError'

  # Case endpoints
  /cases:
    post:
      summary: Create an individual case
      operationId: createIndividualCase
      security:
        - firebase: []
      x-google-backend:
        address: https://europe-west3-relexro.cloudfunctions.net/relex-backend-create-case
        path_translation: CONSTANT_ADDRESS
        deadline: 30.0
      parameters:
        - in: body
          name: body
          required: true
          schema:
            type: object
            required:
              - title
              - description
              - caseTier
            properties:
              title:
                type: string
                description: Title of the case
              description:
                type: string
                description: Description of the case
              paymentIntentId:
                type: string
                description: Stripe payment intent ID (optional if user has an active subscription with available quota)
              caseTier:
                type: integer
                enum: [1, 2, 3]
                description: Case tier level determining the price (1=€9.00, 2=€29.00, 3=€99.00)
              initialPartyIds:
                type: array
                items:
                  type: string
                description: Optional array of party IDs to attach initially
      responses:
        '201':
          description: Case created successfully
          schema:
            $ref: '#/definitions/Case'
        '400':
          $ref: '#/definitions/BadRequest'
        '401':
          $ref: '#/definitions/Unauthorized'
        '402':
          description: Payment required (quota exhausted or no active subscription)
          $ref: '#/definitions/PaymentRequired'
        '403':
          $ref: '#/definitions/Forbidden'
        '500':
          $ref: '#/definitions/InternalServerError'

  /organizations/{organizationId}/cases:
    post:
      summary: Create an organization case
      operationId: createOrganizationCase
      security:
        - firebase: []
      x-google-backend:
        address: https://europe-west3-relexro.cloudfunctions.net/relex-backend-create-case
        path_translation: CONSTANT_ADDRESS
        deadline: 30.0
      parameters:
        - name: organizationId
          in: path
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            type: object
            required:
              - title
              - description
              - caseTier
            properties:
              title:
                type: string
                description: Title of the case
              description:
                type: string
                description: Description of the case
              paymentIntentId:
                type: string
                description: Stripe payment intent ID (optional if organization has an active subscription with available quota)
              caseTier:
                type: integer
                enum: [1, 2, 3]
                description: Case tier level determining the price (1=€9.00, 2=€29.00, 3=€99.00)
              initialPartyIds:
                type: array
                items:
                  type: string
                description: Optional array of party IDs to attach initially
              assignedUserId:
                type: string
                description: Optional staff user ID to assign the case to
      responses:
        '201':
          description: Case created successfully
          schema:
            $ref: '#/definitions/Case'
        '400':
          $ref: '#/definitions/BadRequest'
        '401':
          $ref: '#/definitions/Unauthorized'
        '402':
          description: Payment required (quota exhausted or no active subscription)
          $ref: '#/definitions/PaymentRequired'
        '403':
          $ref: '#/definitions/Forbidden'
        '500':
          $ref: '#/definitions/InternalServerError'
    get:
      summary: List organization cases
      operationId: listOrganizationCases
      security:
        - firebase: []
      x-google-backend:
        address: https://europe-west3-relexro.cloudfunctions.net/relex-backend-list-cases
        path_translation: CONSTANT_ADDRESS
        deadline: 30.0
      parameters:
        - name: organizationId
          in: path
          required: true
          type: string
        - name: status
          in: query
          required: false
          type: string
          enum: [open, archived, deleted]
        - name: limit
          in: query
          required: false
          type: integer
        - name: offset
          in: query
          required: false
          type: integer
        - name: labelIds
          in: query
          required: false
          type: array
          items:
            type: string
        - name: assignedUserId
          in: query
          required: false
          type: string
          description: Filter by assigned staff member (admin only)
      responses:
        '200':
          description: List of cases
          schema:
            type: object
            properties:
              cases:
                type: array
                items:
                  $ref: '#/definitions/Case'
              total:
                type: integer
              limit:
                type: integer
              offset:
                type: integer
        '400':
          $ref: '#/definitions/BadRequest'
        '401':
          $ref: '#/definitions/Unauthorized'
        '403':
          $ref: '#/definitions/Forbidden'
        '500':
          $ref: '#/definitions/InternalServerError'

  # Organization members endpoints
  /organizations/{organizationId}/members:
    get:
      summary: List organization members
      operationId: listOrganizationMembers
      security:
        - firebase: []
      x-google-backend:
        address: https://europe-west3-relexro.cloudfunctions.net/relex-backend-list-organization-members
        path_translation: CONSTANT_ADDRESS
        deadline: 30.0
      parameters:
        - name: organizationId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: List of organization members
          content:
            application/json:
              schema:
                type: object
                properties:
                  members:
                    type: array
                    items:
                      $ref: '#/definitions/OrganizationMember'
        '400':
          $ref: '#/definitions/BadRequest'
        '401':
          $ref: '#/definitions/Unauthorized'
        '403':
          $ref: '#/definitions/Forbidden'
        '404':
          $ref: '#/definitions/NotFound'
        '500':
          $ref: '#/definitions/InternalServerError'
    post:
      summary: Add member to organization
      operationId: addOrganizationMember
      security:
        - firebase: []
      x-google-backend:
        address: https://europe-west3-relexro.cloudfunctions.net/relex-backend-add-organization-member
        path_translation: CONSTANT_ADDRESS
        deadline: 30.0
      parameters:
        - name: organizationId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - userId
                - role
              properties:
                userId:
                  type: string
                  description: ID of user to add
                role:
                  type: string
                  description: Role for the user (staff or administrator)
                  enum: [staff, administrator]
      responses:
        '200':
          description: Member added successfully
          content:
            application/json:
              schema:
                $ref: '#/definitions/MembershipResponse'
        '400':
          $ref: '#/definitions/BadRequest'
        '401':
          $ref: '#/definitions/Unauthorized'
        '403':
          $ref: '#/definitions/Forbidden'
        '404':
          $ref: '#/definitions/NotFound'
        '409':
          $ref: '#/definitions/Conflict'
        '500':
          $ref: '#/definitions/InternalServerError'

  /organizations/{organizationId}/members/{userId}:
    put:
      summary: Update member role
      operationId: setOrganizationMemberRole
      security:
        - firebase: []
      x-google-backend:
        address: https://europe-west3-relexro.cloudfunctions.net/relex-backend-set-organization-member-role
        path_translation: CONSTANT_ADDRESS
        deadline: 30.0
      parameters:
        - name: organizationId
          in: path
          required: true
          schema:
            type: string
        - name: userId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - newRole
              properties:
                newRole:
                  type: string
                  enum: [staff, administrator]
      responses:
        '200':
          description: Member role updated successfully
          content:
            application/json:
              schema:
                $ref: '#/definitions/MembershipResponse'
        '400':
          $ref: '#/definitions/BadRequest'
        '401':
          $ref: '#/definitions/Unauthorized'
        '403':
          $ref: '#/definitions/Forbidden'
        '404':
          $ref: '#/definitions/NotFound'
        '500':
          $ref: '#/definitions/InternalServerError'
    delete:
      summary: Remove member from organization
      operationId: removeOrganizationMember
      security:
        - firebase: []
      x-google-backend:
        address: https://europe-west3-relexro.cloudfunctions.net/relex-backend-remove-organization-member
        path_translation: CONSTANT_ADDRESS
        deadline: 30.0
      parameters:
        - name: organizationId
          in: path
          required: true
          schema:
            type: string
        - name: userId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Member removed successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  userId:
                    type: string
                  organizationId:
                    type: string
        '400':
          $ref: '#/definitions/BadRequest'
        '401':
          $ref: '#/definitions/Unauthorized'
        '403':
          $ref: '#/definitions/Forbidden'
        '404':
          $ref: '#/definitions/NotFound'
        '500':
          $ref: '#/definitions/InternalServerError'

  # File endpoints
  /cases/{caseId}/files:
    post:
      summary: Upload file to a case
      operationId: uploadFile
      security:
        - firebase: []
      x-google-backend:
        address: https://europe-west3-relexro.cloudfunctions.net/relex-backend-upload-file
        path_translation: CONSTANT_ADDRESS
        deadline: 60.0
      parameters:
        - name: caseId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
                fileName:
                  type: string
      responses:
        '201':
          description: File uploaded successfully
          content:
            application/json:
              schema:
                $ref: '#/definitions/FileResponse'
        '400':
          $ref: '#/definitions/BadRequest'
        '401':
          $ref: '#/definitions/Unauthorized'
        '403':
          $ref: '#/definitions/Forbidden'
        '404':
          $ref: '#/definitions/NotFound'
        '500':
          $ref: '#/definitions/InternalServerError'

  /files/{fileId}:
    get:
      summary: Download a file
      operationId: downloadFile
      security:
        - firebase: []
      x-google-backend:
        address: https://europe-west3-relexro.cloudfunctions.net/relex-backend-download-file
        path_translation: CONSTANT_ADDRESS
        deadline: 60.0
      parameters:
        - name: fileId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: File content
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
        '400':
          $ref: '#/definitions/BadRequest'
        '404':
          $ref: '#/definitions/NotFound'
        '500':
          $ref: '#/definitions/InternalServerError'

  # Payment endpoints
  /payments/payment-intent:
    post:
      summary: Create a Stripe payment intent for case payment
      operationId: createPaymentIntent
      security:
        - firebase: []
      x-google-backend:
        address: https://europe-west3-relexro.cloudfunctions.net/relex-backend-create-payment-intent
        path_translation: CONSTANT_ADDRESS
        deadline: 30.0
      parameters:
        - in: body
          name: body
          required: true
          schema:
            type: object
            required:
              - caseTier
            properties:
              caseTier:
                type: integer
                enum: [1, 2, 3]
                description: Case tier level to determine the amount (1=€9.00, 2=€29.00, 3=€99.00)
              currency:
                type: string
                default: "eur"
                description: Currency for the payment (default is EUR)
              description:
                type: string
                description: Description of what this payment is for
              metadata:
                type: object
                description: Additional metadata to attach to the payment intent
              caseId:
                type: string
                description: Optional ID of the case this payment is for
      responses:
        '201':
          description: Payment intent created successfully
          schema:
            type: object
            properties:
              clientSecret:
                type: string
              paymentIntentId:
                type: string
              amount:
                type: integer
                description: Amount in cents
              currency:
                type: string
              message:
                type: string
        '400':
          $ref: '#/definitions/BadRequest'
        '401':
          $ref: '#/definitions/Unauthorized'
        '500':
          $ref: '#/definitions/InternalServerError'

  /payments/checkout-session:
    post:
      summary: Create a Stripe checkout session for subscription or one-time payment
      operationId: createCheckoutSession
      security:
        - firebase: []
      x-google-backend:
        address: https://europe-west3-relexro.cloudfunctions.net/relex-backend-create-checkout-session
        path_translation: CONSTANT_ADDRESS
        deadline: 30.0
      parameters:
        - in: body
          name: body
          required: true
          schema:
            type: object
            properties:
              planId:
                type: string
                description: ID of the subscription plan to purchase (e.g., 'personal_monthly', 'business_pro_yearly')
              mode:
                type: string
                default: "subscription"
                enum: ["subscription", "payment"]
                description: Checkout mode - subscription or one-time payment
              currency:
                type: string
                default: "eur"
                description: Currency for the payment (if one-time payment)
              amount:
                type: integer
                description: Amount in cents for a one-time payment (required if mode=payment)
              successUrl:
                type: string
                description: URL to redirect to after successful payment
              cancelUrl:
                type: string
                description: URL to redirect to after cancelled payment
              metadata:
                type: object
                description: Additional metadata to attach to the checkout session
              organizationId:
                type: string
                description: Optional ID of the organization this subscription is for
              caseId:
                type: string
                description: Optional ID of the case this payment is for
      responses:
        '201':
          description: Checkout session created successfully
          schema:
            type: object
            properties:
              sessionId:
                type: string
              url:
                type: string
              message:
                type: string
        '400':
          $ref: '#/definitions/BadRequest'
        '401':
          $ref: '#/definitions/Unauthorized'
        '500':
          $ref: '#/definitions/InternalServerError'

  /subscriptions/{subscriptionId}:
    delete:
      summary: Cancel a subscription
      operationId: cancelSubscription
      security:
        - firebase: []
      x-google-backend:
        address: https://europe-west3-relexro.cloudfunctions.net/relex-backend-cancel-subscription
        path_translation: CONSTANT_ADDRESS
        deadline: 30.0
      parameters:
        - name: subscriptionId
          in: path
          required: true
          type: string
          description: ID of the subscription to cancel
      responses:
        '200':
          description: Subscription cancelled successfully
          schema:
            type: object
            properties:
              success:
                type: boolean
              message:
                type: string
        '400':
          $ref: '#/definitions/BadRequest'
        '401':
          $ref: '#/definitions/Unauthorized'
        '403':
          $ref: '#/definitions/Forbidden'
        '404':
          $ref: '#/definitions/NotFound'
        '500':
          $ref: '#/definitions/InternalServerError'

  /vouchers/redeem:
    post:
      summary: Redeem a voucher code
      operationId: redeemVoucher
      security:
        - firebase: []
      x-google-backend:
        address: https://europe-west3-relexro.cloudfunctions.net/relex-backend-redeem-voucher
        path_translation: CONSTANT_ADDRESS
        deadline: 30.0
      parameters:
        - in: body
          name: body
          required: true
          schema:
            type: object
            required:
              - voucherCode
            properties:
              voucherCode:
                type: string
                description: The voucher code to redeem
              organizationId:
                type: string
                description: Optional ID of the organization to apply the voucher to
      responses:
        '200':
          description: Voucher redeemed successfully
          schema:
            type: object
            properties:
              success:
                type: boolean
              message:
                type: string
              voucherType:
                type: string
                enum: [free_case, subscription_discount, credit]
              value:
                type: object
                properties:
                  amount:
                    type: integer
                    description: Credit amount in cents, or discount percentage, or number of free cases
                  caseTier:
                    type: integer
                    description: Only for free_case type
              expiresAt:
                type: string
                format: date-time
        '400':
          $ref: '#/definitions/BadRequest'
        '401':
          $ref: '#/definitions/Unauthorized'
        '404':
          $ref: '#/definitions/NotFound'
        '409':
          $ref: '#/definitions/Conflict'
        '500':
          $ref: '#/definitions/InternalServerError'

  /payments/webhook:
    post:
      summary: Handle Stripe webhook events
      operationId: handleStripeWebhook
      x-google-backend:
        address: https://europe-west3-relexro.cloudfunctions.net/relex-backend-handle-stripe-webhook
        path_translation: CONSTANT_ADDRESS
        deadline: 30.0
      parameters:
        - in: header
          name: Stripe-Signature
          type: string
          required: true
        - in: body
          name: body
          required: true
          schema:
            type: object
            description: Stripe webhook event payload
      responses:
        '200':
          description: Webhook processed successfully
          schema:
            type: object
            properties:
              success:
                type: boolean
              message:
                type: string
        '400':
          $ref: '#/definitions/BadRequest'
        '401':
          $ref: '#/definitions/Unauthorized'
        '500':
          $ref: '#/definitions/InternalServerError'

  # Party endpoints
  /parties:
    post:
      summary: Create a new party
      operationId: createParty
      security:
        - firebase: []
      x-google-backend:
        address: https://europe-west3-relexro.cloudfunctions.net/relex-backend-create-party
        path_translation: CONSTANT_ADDRESS
        deadline: 30.0
      parameters:
        - in: body
          name: body
          required: true
          schema:
            type: object
            required:
              - partyType
              - nameDetails
              - identityCodes
              - contactInfo
            properties:
              partyType:
                type: string
                enum: [individual, organization]
                description: Type of the party - determines required fields in nameDetails and identityCodes
              nameDetails:
                type: object
                description: "Name details with conditional required fields: firstName+lastName required for individuals, companyName required for organizations"
                properties:
                  firstName:
                    type: string
                    description: Required for individual parties
                  lastName:
                    type: string
                    description: Required for individual parties
                  companyName:
                    type: string
                    description: Required for organization parties
              identityCodes:
                type: object
                description: "Identity codes with conditional required fields: CNP required for individuals, CUI+RegCom required for organizations"
                properties:
                  cnp:
                    type: string
                    description: Romanian Personal Numeric Code (13 digits) - required for individual parties
                  cui:
                    type: string
                    description: Romanian Company Fiscal Code - required for organization parties
                  regCom:
                    type: string
                    description: Romanian Company Registration Number (format Jxx/xxx/xxxx) - required for organization parties
              contactInfo:
                type: object
                required:
                  - address
                properties:
                  address:
                    type: string
                    description: Required for all party types
                  email:
                    type: string
                    description: Optional email contact
                  phone:
                    type: string
                    description: Optional phone contact
              signatureData:
                type: object
                properties:
                  storagePath:
                    type: string
                    description: Path to signature image in storage
      responses:
        '201':
          description: Party created successfully
          schema:
            $ref: '#/definitions/Party'
        '400':
          $ref: '#/definitions/BadRequest'
        '401':
          $ref: '#/definitions/Unauthorized'
        '500':
          $ref: '#/definitions/InternalServerError'
    get:
      summary: List parties
      operationId: listParties
      security:
        - firebase: []
      x-google-backend:
        address: https://europe-west3-relexro.cloudfunctions.net/relex-backend-list-parties
        path_translation: CONSTANT_ADDRESS
        deadline: 30.0
      parameters:
        - name: partyType
          in: query
          required: false
          type: string
          enum: [individual, organization]
          description: Filter parties by type
      responses:
        '200':
          description: List of parties
          schema:
            type: object
            properties:
              parties:
                type: array
                items:
                  $ref: '#/definitions/Party'
        '401':
          $ref: '#/definitions/Unauthorized'
        '500':
          $ref: '#/definitions/InternalServerError'

  /parties/{partyId}:
    get:
      summary: Get a party by ID
      operationId: getParty
      security:
        - firebase: []
      x-google-backend:
        address: https://europe-west3-relexro.cloudfunctions.net/relex-backend-get-party
        path_translation: CONSTANT_ADDRESS
        deadline: 30.0
      parameters:
        - name: partyId
          in: path
          required: true
          type: string
      responses:
        '200':
          description: Party details
          schema:
            $ref: '#/definitions/Party'
        '401':
          $ref: '#/definitions/Unauthorized'
        '403':
          $ref: '#/definitions/Forbidden'
        '404':
          $ref: '#/definitions/NotFound'
        '500':
          $ref: '#/definitions/InternalServerError'
    put:
      summary: Update a party
      operationId: updateParty
      security:
        - firebase: []
      x-google-backend:
        address: https://europe-west3-relexro.cloudfunctions.net/relex-backend-update-party
        path_translation: CONSTANT_ADDRESS
        deadline: 30.0
      parameters:
        - name: partyId
          in: path
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            type: object
            required:
              - partyId
            properties:
              partyId:
                type: string
                description: ID of the party to update
              nameDetails:
                type: object
                description: "Name details - fields must match the existing partyType (firstName/lastName for individual, companyName for organization)"
                properties:
                  firstName:
                    type: string
                    description: Only valid for individual parties
                  lastName:
                    type: string
                    description: Only valid for individual parties
                  companyName:
                    type: string
                    description: Only valid for organization parties
              identityCodes:
                type: object
                description: "Identity codes - fields must match the existing partyType (cnp for individual, cui/regCom for organization)"
                properties:
                  cnp:
                    type: string
                    description: Romanian Personal Numeric Code - only valid for individual parties
                  cui:
                    type: string
                    description: Romanian Company Fiscal Code - only valid for organization parties
                  regCom:
                    type: string
                    description: Romanian Company Registration Number - only valid for organization parties
              contactInfo:
                type: object
                properties:
                  address:
                    type: string
                  email:
                    type: string
                  phone:
                    type: string
              signatureData:
                type: object
                properties:
                  storagePath:
                    type: string
                    description: Path to signature image in storage
      responses:
        '200':
          description: Party updated successfully
          schema:
            $ref: '#/definitions/Party'
        '400':
          $ref: '#/definitions/BadRequest'
        '401':
          $ref: '#/definitions/Unauthorized'
        '403':
          $ref: '#/definitions/Forbidden'
        '404':
          $ref: '#/definitions/NotFound'
        '500':
          $ref: '#/definitions/InternalServerError'
    delete:
      summary: Delete a party
      operationId: deleteParty
      security:
        - firebase: []
      x-google-backend:
        address: https://europe-west3-relexro.cloudfunctions.net/relex-backend-delete-party
        path_translation: CONSTANT_ADDRESS
        deadline: 30.0
      parameters:
        - name: partyId
          in: path
          required: true
          type: string
      responses:
        '204':
          description: Party deleted successfully
        '401':
          $ref: '#/definitions/Unauthorized'
        '403':
          $ref: '#/definitions/Forbidden'
        '404':
          $ref: '#/definitions/NotFound'
        '409':
          description: Conflict - Party cannot be deleted (e.g., attached to cases)
          schema:
            $ref: '#/definitions/Conflict'
        '500':
          $ref: '#/definitions/InternalServerError'

  /cases/{caseId}/parties:
    post:
      summary: Attach a party to a case
      operationId: attachPartyToCase
      security:
        - firebase: []
      x-google-backend:
        address: https://europe-west3-relexro.cloudfunctions.net/relex-backend-attach-party-to-case
        path_translation: CONSTANT_ADDRESS
        deadline: 30.0
      parameters:
        - name: caseId
          in: path
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            type: object
            required:
              - partyId
            properties:
              partyId:
                type: string
                description: ID of the party to attach to the case
      responses:
        '200':
          description: Party attached successfully
          schema:
            type: object
            properties:
              success:
                type: boolean
              message:
                type: string
              caseId:
                type: string
              partyId:
                type: string
        '400':
          $ref: '#/definitions/BadRequest'
        '401':
          $ref: '#/definitions/Unauthorized'
        '403':
          $ref: '#/definitions/Forbidden'
        '404':
          $ref: '#/definitions/NotFound'
        '500':
          $ref: '#/definitions/InternalServerError'

  /cases/{caseId}/parties/{partyId}:
    delete:
      summary: Detach a party from a case
      operationId: detachPartyFromCase
      security:
        - firebase: []
      x-google-backend:
        address: https://europe-west3-relexro.cloudfunctions.net/relex-backend-detach-party-from-case
        path_translation: CONSTANT_ADDRESS
        deadline: 30.0
      parameters:
        - name: caseId
          in: path
          required: true
          type: string
        - name: partyId
          in: path
          required: true
          type: string
      responses:
        '200':
          description: Party detached successfully
          schema:
            type: object
            properties:
              success:
                type: boolean
              message:
                type: string
              caseId:
                type: string
              partyId:
                type: string
        '401':
          $ref: '#/definitions/Unauthorized'
        '403':
          $ref: '#/definitions/Forbidden'
        '404':
          $ref: '#/definitions/NotFound'
        '500':
          $ref: '#/definitions/InternalServerError'

  /api/stripe/webhook:
    post:
      tags:
        - Subscriptions
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: header
          name: stripe-signature
          type: string
          required: true
        - in: body
          name: event
          schema:
            type: object
      responses:
        200:
          description: Webhook event processed successfully
        400:
          $ref: '#/responses/BadRequest'
        401:
          $ref: '#/responses/Unauthorized'
        500:
          $ref: '#/responses/InternalServerError'

  /api/parties:
    post:
      tags:
        - Parties
      security:
        - firebaseAuth: []
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: party
          required: true
          schema:
            type: object
            required:
              - partyType
              - nameDetails
              - identityCodes
              - contactInfo
            properties:
              partyType:
                type: string
                enum:
                  - individual
                  - organization
                description: Type of party (individual or organization) that determines required fields
              nameDetails:
                type: object
                description: Name information depending on party type
                properties:
                  firstName:
                    type: string
                    description: Required for individual parties
                  lastName:
                    type: string
                    description: Required for individual parties
                  companyName:
                    type: string
                    description: Required for organization parties
              identityCodes:
                type: object
                description: Identification codes depending on party type
                properties:
                  cnp:
                    type: string
                    description: Romanian Personal Numeric Code (13 digits). Required for individual parties
                  cui:
                    type: string
                    description: Romanian Fiscal Code. Required for organization parties
                  regCom:
                    type: string
                    description: Romanian Company Registration Number. Required for organization parties
              contactInfo:
                type: object
                required:
                  - address
                properties:
                  address:
                    type: string
                    description: Required physical address for all party types
                  email:
                    type: string
                    format: email
                    description: Optional contact email
                  phone:
                    type: string
                    description: Optional contact phone number
              signatureData:
                type: object
                properties:
                  storagePath:
                    type: string
                    description: Path to the signature image/data in storage
      responses:
        201:
          description: Party created successfully
          schema:
            $ref: '#/definitions/Party'
        400:
          $ref: '#/responses/BadRequest'
        401:
          $ref: '#/responses/Unauthorized'
        500:
          $ref: '#/responses/InternalServerError'
    
    get:
      tags:
        - Parties
      security:
        - firebaseAuth: []
      produces:
        - application/json
      parameters:
        - in: query
          name: partyType
          required: false
          type: string
          enum:
            - individual
            - organization
          description: Filter parties by type
      responses:
        200:
          description: List of parties
          schema:
            type: object
            properties:
              parties:
                type: array
                items:
                  $ref: '#/definitions/Party'
        401:
          $ref: '#/responses/Unauthorized'
        500:
          $ref: '#/responses/InternalServerError'

  /api/parties/{partyId}:
    get:
      tags:
        - Parties
      security:
        - firebaseAuth: []
      produces:
        - application/json
      parameters:
        - in: path
          name: partyId
          required: true
          type: string
          description: Unique identifier for the party
      responses:
        200:
          description: Party details
          schema:
            $ref: '#/definitions/Party'
        400:
          $ref: '#/responses/BadRequest'
        401:
          $ref: '#/responses/Unauthorized'
        404:
          $ref: '#/responses/NotFound'
        500:
          $ref: '#/responses/InternalServerError'
    
    put:
      tags:
        - Parties
      security:
        - firebaseAuth: []
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: partyId
          required: true
          type: string
          description: Unique identifier for the party
        - in: body
          name: party
          required: true
          schema:
            type: object
            required:
              - partyId
            properties:
              partyId:
                type: string
                description: Must match the URL partyId
              nameDetails:
                type: object
                description: Name information must comply with existing partyType
                properties:
                  firstName:
                    type: string
                    description: Only valid for individual parties
                  lastName:
                    type: string
                    description: Only valid for individual parties
                  companyName:
                    type: string
                    description: Only valid for organization parties
              identityCodes:
                type: object
                description: Identification codes must comply with existing partyType
                properties:
                  cnp:
                    type: string
                    description: Only valid for individual parties
                  cui:
                    type: string
                    description: Only valid for organization parties
                  regCom:
                    type: string
                    description: Only valid for organization parties
              contactInfo:
                type: object
                properties:
                  address:
                    type: string
                  email:
                    type: string
                    format: email
                  phone:
                    type: string
              signatureData:
                type: object
                properties:
                  storagePath:
                    type: string
      responses:
        200:
          description: Party updated successfully
          schema:
            $ref: '#/definitions/Party'
        400:
          $ref: '#/responses/BadRequest'
        401:
          $ref: '#/responses/Unauthorized'
        404:
          $ref: '#/responses/NotFound'
        500:
          $ref: '#/responses/InternalServerError'
    
    delete:
      tags:
        - Parties
      security:
        - firebaseAuth: []
      produces:
        - application/json
      parameters:
        - in: path
          name: partyId
          required: true
          type: string
          description: Unique identifier for the party
      responses:
        204:
          description: Party deleted successfully
        400:
          $ref: '#/responses/BadRequest'
        401:
          $ref: '#/responses/Unauthorized'
        404:
          $ref: '#/responses/NotFound'
        409:
          description: Conflict - Party cannot be deleted (e.g., attached to cases)
          schema:
            $ref: '#/definitions/Conflict'
        500:
          $ref: '#/responses/InternalServerError'

  /api/cases/{caseId}/parties:
    post:
      tags:
        - Parties
        - Cases
      security:
        - firebaseAuth: []
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: caseId
          required: true
          type: string
          description: Unique identifier for the case
        - in: body
          name: partyAssociation
          required: true
          schema:
            type: object
            required:
              - partyId
            properties:
              partyId:
                type: string
                description: Unique identifier for the party to attach
      responses:
        200:
          description: Party successfully attached to case
          schema:
            type: object
            properties:
              success:
                type: boolean
              message:
                type: string
              caseId:
                type: string
              partyId:
                type: string
        400:
          $ref: '#/responses/BadRequest'
        401:
          $ref: '#/responses/Unauthorized'
        404:
          $ref: '#/responses/NotFound'
        500:
          $ref: '#/responses/InternalServerError'

  /api/cases/{caseId}/parties/{partyId}:
    delete:
      tags:
        - Parties
        - Cases
      security:
        - firebaseAuth: []
      produces:
        - application/json
      parameters:
        - in: path
          name: caseId
          required: true
          type: string
          description: Unique identifier for the case
        - in: path
          name: partyId
          required: true
          type: string
          description: Unique identifier for the party
      responses:
        200:
          description: Party successfully detached from case
          schema:
            type: object
            properties:
              success:
                type: boolean
              message:
                type: string
              caseId:
                type: string
              partyId:
                type: string
        400:
          $ref: '#/responses/BadRequest'
        401:
          $ref: '#/responses/Unauthorized'
        404:
          $ref: '#/responses/NotFound'
        500:
          $ref: '#/responses/InternalServerError'

  /cases/{caseId}:
    get:
      summary: Get case details
      operationId: getCase
      security:
        - firebase: []
      x-google-backend:
        address: https://europe-west3-relexro.cloudfunctions.net/relex-backend-get-case
        path_translation: CONSTANT_ADDRESS
        deadline: 30.0
      parameters:
        - name: caseId
          in: path
          required: true
          type: string
      responses:
        '200':
          description: Case details
          schema:
            $ref: '#/definitions/Case'
        '401':
          $ref: '#/definitions/Unauthorized'
        '403':
          $ref: '#/definitions/Forbidden'
        '404':
          $ref: '#/definitions/NotFound'
        '500':
          $ref: '#/definitions/InternalServerError'
    delete:
      summary: Delete case
      operationId: deleteCase
      security:
        - firebase: []
      x-google-backend:
        address: https://europe-west3-relexro.cloudfunctions.net/relex-backend-delete-case
        path_translation: CONSTANT_ADDRESS
        deadline: 30.0
      parameters:
        - name: caseId
          in: path
          required: true
          type: string
      responses:
        '200':
          description: Case deleted successfully
          schema:
            type: object
            properties:
              success:
                type: boolean
              message:
                type: string
        '401':
          $ref: '#/definitions/Unauthorized'
        '403':
          $ref: '#/definitions/Forbidden'
        '404':
          $ref: '#/definitions/NotFound'
        '500':
          $ref: '#/definitions/InternalServerError'

  /cases/{caseId}/archive:
    post:
      summary: Archive case
      operationId: archiveCase
      security:
        - firebase: []
      x-google-backend:
        address: https://europe-west3-relexro.cloudfunctions.net/relex-backend-archive-case
        path_translation: CONSTANT_ADDRESS
        deadline: 30.0
      parameters:
        - name: caseId
          in: path
          required: true
          type: string
      responses:
        '200':
          description: Case archived successfully
          schema:
            type: object
            properties:
              success:
                type: boolean
              message:
                type: string
              caseId:
                type: string
              status:
                type: string
              archivedAt:
                type: string
                format: date-time
        '401':
          $ref: '#/definitions/Unauthorized'
        '403':
          $ref: '#/definitions/Forbidden'
        '404':
          $ref: '#/definitions/NotFound'
        '500':
          $ref: '#/definitions/InternalServerError'

  /cases/{caseId}/assign:
    put:
      summary: Assign case to staff member
      operationId: assignCase
      security:
        - firebase: []
      x-google-backend:
        address: https://europe-west3-relexro.cloudfunctions.net/relex-backend-assign-case
        path_translation: CONSTANT_ADDRESS
        deadline: 30.0
      parameters:
        - name: caseId
          in: path
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            type: object
            required:
              - assignedUserId
            properties:
              assignedUserId:
                type: string
                description: Staff user ID to assign case to, null to unassign
      responses:
        '200':
          description: Case assigned successfully
          schema:
            type: object
            properties:
              success:
                type: boolean
              message:
                type: string
              caseId:
                type: string
              assignedUserId:
                type: string
              assignedUserName:
                type: string
        '401':
          $ref: '#/definitions/Unauthorized'
        '403':
          $ref: '#/definitions/Forbidden'
        '404':
          $ref: '#/definitions/NotFound'
        '500':
          $ref: '#/definitions/InternalServerError'

definitions:
  UserProfile:
    type: object
    properties:
      userId:
        type: string
      email:
        type: string
      displayName:
        type: string
      photoURL:
        type: string
      role:
        type: string
        enum: [user, admin]
      subscriptionStatus:
        type: string
        enum: [active, inactive]
      subscriptionPlanId:
        type: string
        description: ID of the subscription plan
      billingCycleStart:
        type: string
        format: date-time
        description: Start date of the current billing cycle
      billingCycleEnd:
        type: string
        format: date-time
        description: End date of the current billing cycle
      caseQuotaTotal:
        type: integer
        description: Total number of cases included in the subscription for the current billing cycle
      caseQuotaUsed:
        type: integer
        description: Number of cases used from the quota in the current billing cycle
      stripeCustomerId:
        type: string
        description: Stripe customer ID for payment processing
      stripeSubscriptionId:
        type: string
        description: Stripe subscription ID
      languagePreference:
        type: string
        enum: [en, ro]
      createdAt:
        type: string
        format: date-time
      updatedAt:
        type: string
        format: date-time

  Organization:
    type: object
    properties:
      organizationId:
        type: string
      name:
        type: string
      type:
        type: string
      address:
        type: string
      phone:
        type: string
      email:
        type: string
      createdAt:
        type: string
        format: date-time
      ownerId:
        type: string
      subscriptionStatus:
        type: string
        enum: [active, inactive]
        description: Current subscription status
      subscriptionPlanId:
        type: string
        description: ID of the subscription plan
      billingCycleStart:
        type: string
        format: date-time
        description: Start date of the current billing cycle
      billingCycleEnd:
        type: string
        format: date-time
        description: End date of the current billing cycle
      caseQuotaTotal:
        type: integer
        description: Total number of cases included in the subscription for the current billing cycle
      caseQuotaUsed:
        type: integer
        description: Number of cases used from the quota in the current billing cycle
      stripeCustomerId:
        type: string
        description: Stripe customer ID for payment processing
      stripeSubscriptionId:
        type: string
        description: Stripe subscription ID
    
  OrganizationSummary:
    type: object
    properties:
      organizationId:
        type: string
      name:
        type: string
      type:
        type: string
      role:
        type: string
    
  OrganizationMember:
    type: object
    properties:
      userId:
        type: string
      role:
        type: string
      addedAt:
        type: string
        format: date-time
      email:
        type: string
      displayName:
        type: string
    
  MembershipResponse:
    type: object
    properties:
      success:
        type: boolean
      membershipId:
        type: string
      userId:
        type: string
      organizationId:
        type: string
      role:
        type: string
      email:
        type: string
      displayName:
        type: string
    
  Case:
    type: object
    properties:
      caseId:
        type: string
      title:
        type: string
      description:
        type: string
      caseType:
        type: string
      userId:
        type: string
      organizationId:
        type: string
      status:
        type: string
      createdAt:
        type: string
        format: date-time
      paymentStatus:
        type: string
        enum: [paid_intent, covered_by_quota, pending]
        description: Payment status of the case (paid_intent = paid individually, covered_by_quota = covered by subscription)
      paymentIntentId:
        type: string
      caseTier:
        type: integer
        enum: [1, 2, 3]
        description: Case tier level determining the complexity (1=Basic, 2=Standard, 3=Complex)
      casePrice:
        type: integer
        description: Price of the case in cents

  FileResponse:
    type: object
    properties:
      success:
        type: boolean
      fileId:
        type: string
      fileName:
        type: string
      fileUrl:
        type: string
      caseId:
        type: string
      uploadedAt:
        type: string
        format: date-time

  BadRequest:
    type: object
    properties:
      error:
        type: string
        enum: [invalid_request]
      message:
        type: string
        description: Detailed validation error message
    
  Unauthorized:
    type: object
    properties:
      error:
        type: string
        enum: [unauthorized]
      message:
        type: string
        description: Authentication error message
    
  Forbidden:
    type: object
    properties:
      error:
        type: string
        enum: [forbidden]
      message:
        type: string
        description: Permission denied message
    
  NotFound:
    type: object
    properties:
      error:
        type: string
        enum: [not_found]
      message:
        type: string
        description: Resource not found message
    
  Conflict:
    type: object
    properties:
      error:
        type: string
        enum: [conflict]
      message:
        type: string
        description: Resource state conflict message
    
  InternalServerError:
    type: object
    properties:
      error:
        type: string
        enum: [internal_error]
      message:
        type: string
        description: Internal server error message
    
  PaymentRequired:
    type: object
    properties:
      error:
        type: string
        enum: [payment_required]
      message:
        type: string
        description: Payment required message (e.g., quota exhausted)

  RateLimitExceeded:
    type: object
    properties:
      error:
        type: string
        enum: [rate_limit_exceeded]
      message:
        type: string
        description: Rate limit exceeded message

  Plan:
    type: object
    properties:
      planId:
        type: string
        description: Unique identifier for the plan
      name:
        type: string
        description: Display name of the plan
      description:
        type: string
        description: Description of what the plan includes
      type:
        type: string
        enum: [personal, business]
        description: Type of plan
      interval:
        type: string
        enum: [monthly, yearly]
        description: Billing interval
      price:
        type: integer
        description: Price of the plan in cents
      currency:
        type: string
        default: "eur"
        description: Currency of the plan
      caseQuotaTotal:
        type: integer
        description: Number of cases included in the plan per billing cycle
      active:
        type: boolean
        description: Whether the plan is currently active
      stripePriceId:
        type: string
        description: Stripe price ID for this plan
      createdAt:
        type: string
        format: date-time
      updatedAt:
        type: string
        format: date-time

  Party:
    type: object
    properties:
      partyId:
        type: string
        description: Unique identifier for the party
      userId:
        type: string
        description: Firebase user ID of the party owner
      partyType:
        type: string
        enum:
          - individual
          - organization
        description: Type of party that determines required fields
      nameDetails:
        type: object
        description: Name information depending on party type
        properties:
          firstName:
            type: string
            description: Only present for individual parties
          lastName:
            type: string
            description: Only present for individual parties
          companyName:
            type: string
            description: Only present for organization parties
      identityCodes:
        type: object
        description: Identification codes depending on party type
        properties:
          cnp:
            type: string
            description: Romanian Personal Numeric Code. Only present for individual parties
          cui:
            type: string
            description: Romanian Fiscal Code. Only present for organization parties
          regCom:
            type: string
            description: Romanian Company Registration Number. Only present for organization parties
      contactInfo:
        type: object
        properties:
          address:
            type: string
            description: Physical address for all party types
          email:
            type: string
            format: email
            description: Contact email if available
          phone:
            type: string
            description: Contact phone number if available
      signatureData:
        type: object
        properties:
          storagePath:
            type: string
            description: Path to the signature image/data in storage
          capturedAt:
            type: string
            format: date-time
            description: When the signature was captured
      createdAt:
        type: string
        format: date-time
        description: When the party was created
      updatedAt:
        type: string
        format: date-time
        description: When the party was last updated
    required:
      - partyId
      - userId
      - partyType
      - nameDetails
      - identityCodes
      - contactInfo
      - createdAt
      - updatedAt 